library(Signac)
library(Seurat)
library(SeuratData)
library(scater)
library(SeuratWrappers) #1
library(monocle3)
library(monocle)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GeneSwitches)
library(SingleCellExperiment)
library(dplyr)
library(viridis)
library(RColorBrewer)
library(pheatmap)
library(circlize)
library(scCustomize)

so_cvp <- CreateSeuratObject(counts = cvp, project = "CVP", min.cells = 3, min.features = 200)
so_fop <- CreateSeuratObject(counts = fop, project = "FoP", min.cells= 3, min.features = 200)
#combining datasets do this after regressing and normalizing
so.combined <- merge(so_fop, y = c(so_cvp), add.cell.ids = c( "FoP", "CVP"), project = "Tastebud")

table(so.combined$orig.ident)
#CVP 6389 FoP 13931 

so.combined[["percent.mt"]] <- PercentageFeatureSet(so.combined, pattern = "^mt-")
so.combined <- ScaleData(so.combined, vars.to.regress = "percent.mt")
VlnPlot(so.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

so.combined <- NormalizeData(object = so.combined, normalization.method = "LogNormalize", scale.factor = 10000)
so.combined<- FindVariableFeatures(so.combined)
so.combined <- RunPCA(so.combined, pc.genes = hv.genes, pcs.compute =25 , ndims.print = 1:5, nfeatures.print = 5, genes.print = 5)
ElbowPlot( so.combined, ndims = 50)
so.combined <- FindNeighbors(so.combined, reduction = "pca", dims = 1:25, nn.eps = 0.5) 
so.combined <- FindClusters(so.combined, resolution = 0.5, n.start = 10) 
so.combined <- RunUMAP(so.combined, dims = 1:25, min.dist = 0.5)
DimPlot(so.combined, reduction = "umap", pt.size = 0.1, label = T) + ggtitle(label = "UMAP") + NoAxes()

#remove immune, endothelial clusters 
so.combined <- subset(so.combined, idents = c("10", "12","13"), invert=T)

new.cluster.ids = c("Basal progenitor", "Basal progenitor","Lingual EC", "Lgr5+ stem cell", "cycling Basal","Krt14+ Basal", "cycling Basal", "Ductal (saliva)", "Intermediate progenitor", "Taste (Type-I, III & IV)", "Taste (Type-II)", "Acinar (saliva)")
names(x = new.cluster.ids) <- levels(x = so.combined)
anno.cvpfop1 <- RenameIdents(object = so.combined, new.cluster.ids)

###figure 1b 
DimPlot(so.combined, reduction = "umap", pt.size = 0.1, label = T) + ggtitle(label = "UMAP") + NoAxes()

#genes utilized for clustering FIGure 1c
cluster_fig1<-c("Snap25","Car4","Entpd2", "Krt8", "Krt19", "Gnat3","Trpm5" , "Krt5", "Krt14", "Mki67", "Sprr1b", "Krt4", "Krt13", "Vim", "Shh","Lgr5", "Lgr6", "Acta2", "Muc19","Dcpp1", "Cldn2", "Sox9", "Sox2")
##function to get colours from umap based on amount of clusters
ggplotColours <- function(n = 6, h = c(0, 360) + 15){
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)
}
clust.cols <- ggplotColours(n=10)

p <- DotPlot_scCustom(annocvpfop , features = cluster_fig1)
data <- p$data
ggplot2::ggplot(data, ggplot2::aes(y = id, x = features.plot, size = pct.exp, fill = avg.exp.scaled)) +
  ggplot2::geom_point(shape=21)+
  ggplot2::theme_bw() +
  ggplot2::scale_size_area(max_size = 10) +
  ggplot2::scale_fill_gradient2(low="blue3",high="red3",mid="white",limits=c(-2.5,2.5)) +
  ggplot2::labs(fill="Relative expression", size = "Percent expressed") +
  ggplot2::xlab("Cluster") +
  ggplot2::ylab("Gene") +
  ggplot2::theme(axis.text.y = ggplot2::element_text(size=12,color=clust.cols),
                 axis.text.x = ggplot2::element_text(size=12,angle = 45, hjust=1),
                 axis.title = ggplot2::element_text(size=0),
                 legend.title=ggplot2::element_text(size=14),
                 legend.text = ggplot2::element_text(size=12),
                 legend.position = "bottom",
                 panel.background = ggplot2::element_rect(colour = "black", size=1)+
  ggplot2::guides(size=ggplot2::guide_legend(ncol=2, title.position = "top"),
                  fill=ggplot2::guide_colorbar(title.position = "top", label.position = "top")))

#### figure S2
vonebneranno.markers <- c("Dcpp1", "Dcpp3","Aqp5", "Bhlha15", "Krt19","Krt8", "Krt7", "Cldn10","Cldn2","Ltf", "Dmbt1","Acta2","Myl9", "Muc19",  "Muc16", "Muc5b", "Amy1", "Mki67", "Krt14", "Krt5", "Kit", "Psca", "Sox9","Epcam")

p <- DotPlot_scCustom(vonEbner , features = vonebneranno.markers)

data <- p$data
ggplot2::ggplot(data, ggplot2::aes(y = id, x = features.plot, size = pct.exp, fill = avg.exp.scaled)) +
  ggplot2::geom_point(shape=21)+
  ggplot2::theme_bw() +
  ggplot2::scale_size_area(max_size = 10) +
  ggplot2::scale_fill_gradient2(low="blue3",high="red3",mid="white",limits=c(-2.5,2.5)) +
  ggplot2::labs(fill="Relative expression", size = "Percent expressed") +
  ggplot2::xlab("Cluster") +
  ggplot2::ylab("Gene") +
  ggplot2::theme(axis.text.y = ggplot2::element_text(size=12,color=clust.cols),
                 axis.text.x = ggplot2::element_text(size=12,angle = 45, hjust=1),
                 axis.title = ggplot2::element_text(size=0),
                 legend.title=ggplot2::element_text(size=14),
                 legend.text = ggplot2::element_text(size=12),
                 legend.position = "bottom",
                 panel.background = ggplot2::element_rect(colour = "black", size=1)+
                   ggplot2::guides(size=ggplot2::guide_legend(ncol=2, title.position = "top"),
                                   fill=ggplot2::guide_colorbar(title.position = "top", label.position = "top")))


###Supplementary figure 1e

genes <- read.csv("20240930_intermediatemarkers.csv", header = FALSE, stringsAsFactors = FALSE)
gene_list <- genes$V1  # Extract gene symbols
entrez_ids <- mapIds(org.Mm.eg.db, keys = gene_list, keytype = "SYMBOL", column = "ENTREZID")
entrez_ids <- na.omit(entrez_ids)  # Remove NAs


ego <- enrichGO(gene = entrez_ids, 
                OrgDb = org.Mm.eg.db, 
                keyType = "ENTREZID", 
                ont = "BP",  # "BP" = Biological Process, "MF" = Molecular Function, "CC" = Cellular Component
                pAdjustMethod = "fdr", 
                pvalueCutoff = 0.05, 
                qvalueCutoff = 0.05, 
                readable = TRUE)  # Convert IDs back to gene names
dotplot(ego, showCategory = 15, title = "GO Biological Process Enrichment")
barplot(ego, showCategory = 15, title = "Top GO Terms in Biological Process")
emapplot(ego, showCategory = 15)




